name: Build and Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/
          retention-days: 30
      
      - name: Archive build artifacts
        if: matrix.node-version == '20.x'
        run: |
          cd dist
          tar -czf ../maverick-build-${{ github.sha }}.tar.gz .
          cd ..
          zip -r maverick-build-${{ github.sha }}.zip dist/
      
      - name: Upload archived artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: archived-builds
          path: |
            maverick-build-${{ github.sha }}.tar.gz
            maverick-build-${{ github.sha }}.zip
          retention-days: 30

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting (if available)
        run: npm run lint --if-present
      
      - name: Run tests (if available)
        run: npm test --if-present

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/
      
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Build successful! Preview artifacts are ready for download from the Actions tab.'
            })
